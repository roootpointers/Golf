
@{
    ViewBag.Title = "CreateMatch";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}


<section class="content">
    <div class="row">
        <div class="col-xs-12">

            <script type="text/x-template" id="create-match-template">
                <div class="box box-default">
                    <div class="box-header">
                        <div>
                            <h1 class="box-title col-md-3" style="font-weight:bold; color:red; font-size:24px; padding-bottom:5px;">Create Match</h1>
                            <div class="form-group pull-right">
                                <a href="/Admin/CreateBoard" class="btn btn-warning">Cancel</a>
                                <button class="btn btn-success" v-on:click="SaveMatch()">Save Match</button>
                            </div>
                        </div>
                        <div class="box-body p-0">
                            <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12 p-0">
                                <div class="box box-primary">
                                    <div class="box-body">

                                        <div class="container-fluid">
                                            <form novalidate>
                                                <div class="row">
                                                    <div class="col-sm-6">
                                                        <div class="form-group">
                                                            <label>Course Slop</label>
                                                            <input class="form-control" disabled type="text" name="CourseSlop" v-model="CourseSlop" />
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <div class="form-group">
                                                            <label>Course T Name</label>
                                                            <input class="form-control" disabled type="text" name="CourseName" v-model="CourseTName" />
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <div class="form-group">
                                                            <label>Course Name</label>
                                                            <input class="form-control" disabled type="text" name="CourseName" v-model="CourseName" />
                                                        </div>
                                                    </div>
                                                </div>
                                                <hr />
                                                <div class="row">
                                                    <div class="col-sm-6">
                                                        <h4>Golfer 1 Info</h4>
                                                        <div class="row">
                                                            <div class="col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Golfer Name</label>
                                                                    <input class="form-control" type="text" name="Golfer1Name"  v-model="Golfer1.Name" />
                                                                </div>
                                                            </div>
                                                            <div class="col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Golfer Index</label>
                                                                    <input step="auto" class="form-control" type="number" name="Golfer1Index"  v-model="Golfer1.PlayerIndex" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <h4>Golfer 2 Info</h4>
                                                        <div class="row">
                                                            <div class="col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Golfer Name</label>
                                                                    <input class="form-control" type="text" name="Golfer2Name" v-model="Golfer2.Name" />
                                                                </div>
                                                            </div>
                                                            <div class="col-sm-12">
                                                                <div class="form-group">
                                                                    <label>Golfer Index</label>
                                                                    <input step="auto" class="form-control" type="number" name="Golfer2Index" v-model="Golfer2.PlayerIndex" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </form>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </script>


            <div id="vueapp">
                <create-match></create-match>
            </div>

        </div>
    </div>
</section>


<script>

    Vue.component('create-match', {
        template: '#create-match-template',
        components: {
        },
        data: function () {
            return {
                BoardId: null,
                BoardData: [],
                CourseName: null,
                CourseTName: null,
                CourseSlop: 0,
                Golfer1: {
                    Name: 'Golfer 1',
                    CourseHandicap: 0,
                    PlayerIndex: 0,
                    TeeBoxes: '',
                    firstHalf: [
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 }
                    ],
                    secondHalf: [
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 }
                    ],
                    isChnaged: false
                },
                Golfer2: {
                    Name: 'Golfer 2',
                    CourseHandicap: 0,
                    PlayerIndex: 0,
                    TeeBoxes: '',
                    firstHalf: [
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 }
                    ],
                    secondHalf: [
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 },
                        { val: 0, show: false, dots: 0, Won: 0 }
                    ],
                    isChnaged: false
                }
            };
        },
        watch: {

        },
        methods: {
            createHoleObj: function (type, arr, golferId = null) {
                var obj = {
                    Type: type,
                    H1: arr[0].val,
                    H2: arr[1].val,
                    H3: arr[2].val,
                    H4: arr[3].val,
                    H5: arr[4].val,
                    H6: arr[5].val,
                    H7: arr[6].val,
                    H8: arr[7].val,
                    H9: arr[8].val,
                    H10: arr[9].val,
                    H11: arr[10].val,
                    H12: arr[11].val,
                    H13: arr[12].val,
                    H14: arr[13].val,
                    H15: arr[14].val,
                    H16: arr[15].val,
                    H17: arr[16].val,
                    H18: arr[17].val,
                    MatchId: this.MatchId,
                    GolfersId: golferId,
                    Updated: new Date()
                };
                return obj;
            },
            SaveMatch: function () {
                const golfer1Scores = [...this.Golfer1.firstHalf, ...this.Golfer1.secondHalf];
                golfer1Scores.forEach(s => {
                    s.val = parseInt(s.val + '', 10);
                });
                const golfer1Obj = {
                    Name: this.Golfer1.Name,
                    PlayerIndex: this.Golfer1.PlayerIndex,
                    Holes: [
                        this.createHoleObj(4, golfer1Scores)
                    ]
                };
                const golfer2Scores = [...this.Golfer2.firstHalf, ...this.Golfer2.secondHalf];
                golfer2Scores.forEach(s => {
                    s.val = parseInt(s.val + '', 10);
                });
                const golfer2Obj = {
                    Name: this.Golfer2.Name,
                    PlayerIndex: this.Golfer2.PlayerIndex,
                    Holes: [
                        this.createHoleObj(4, golfer2Scores)
                    ]
                };

                axios.post(`/api/WebApis/UpdateMatch`, {
                    Title: this.BoardData[0].CourseName,
                    CourseSlop: this.BoardData[0].CourseSlop,
                    TName: this.BoardData[0].CourseTName,
                    Holes: this.BoardData,
                    Golfers: [golfer1Obj, golfer2Obj]
                }).then(res => {
                    if (res.data != null) {
                        window.location.href = '/Admin/Scoreboard';
                    }
                });
            },
            LoadBoard: function (boardId) {
                axios.get(`/api/WebApis/GetBoard?boardId=${boardId}`).then(
                    res => {
                        if (res.data.length > 0) {
                            this.CourseName = res.data[0].CourseName;
                            this.CourseSlop = res.data[0].CourseSlop;
                            this.CourseTName = res.data[0].CourseTName;
                            this.BoardData = res.data;
                        }
                    }
                )
            }
        },
        computed: {
        },
        mounted: function () {
            const params = {};
            const url = window.location.href.split('?');
            if (url.length > 1) {
                const paramsPart = url[1];
                const paramsList = paramsPart.split('&');
                paramsList.forEach((param) => {
                    const keyValue = param.split('=');
                    if (keyValue.length === 2) {
                        params[keyValue[0]] = keyValue[1];
                    }
                });
            }
            this.BoardId = params.BoardId;
            if (this.BoardId != null) {
                this.LoadBoard(this.BoardId);
            }
        }
    })

    var app = new Vue({
        el: '#vueapp',
        data: {
            message: 'Hello Vue!',
            showForm: false,
        },
        components: {
            'popper': VuePopper
        },
        mounted: function () {
        }
    });
</script>