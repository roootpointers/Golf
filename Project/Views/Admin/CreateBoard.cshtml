
@{
    ViewBag.Title = "CreateBoard";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}

    <style>
        
        .p-0 {
            padding: 0px;
        }

        .bg-green {
            background-color: #017101 !important;
        }

        .bg-deepskyblue {
            background-color: #56C1FF;
            font-size: 18px;
        }

        .text-blue {
            color: blue;
        }

        .bg-light-green {
            background-color: #1DB100;
            color: white;
        }

        .score-board-outer {
            position: relative;
            min-width: 1190px;
        }

            .score-board-outer .score-board-row {
                position: relative;
                display: flex;
                flex-direction: row;
                flex-grow: 1;
            }

        .score-board-row .score-board-box {
            position: relative;
            display: flex;
            border-right: 1px solid #808080;
            border-bottom: 1px solid #808080;
            min-width: 40px;
            flex-grow: 1;
            text-align: center;
            align-items: center;
            justify-content: center;
            min-height: 40px;
            padding: 3px;
            font-weight: bold;
        }

        .score-board-row:first-child {
            border-top: 1px solid #808080;
        }

        .score-board-row .score-board-box:first-child {
            border-left: 1px solid #808080;
        }

        .popper-content {
            display: block;
            /*width: 88px;*/
            overflow: hidden;
            text-align: center;
            padding: 7px;
        }

        input[type="number"].popper-input {
            padding: 0px;
            width: 78px !important;
            float: left;
            padding-left: 3px;
            padding-right: 3px;
            text-align: center;
            font-size: 17px;
            height: 30px;
        }

        .box-heading {
            width: 120px;
            max-width: 120px;
        }

        .box-width {
            width: 50px;
            max-width: 50px;
        }

        .score-board-box .box-text {
            cursor: pointer;
            min-height: 25px;
            min-width: 45px;
            display: inline-block;
            height: 100%;
            width: 100%;
        }

        .score-board-box.score-box {
            width: 50px;
            max-width: 50px;
        }

        .golf-score-outer {
            position: relative;
            height: 100%;
            display: flex;
            flex-direction: column;
            align-items: flex-end;
            justify-content: flex-end;
        }

            .golf-score-outer .golf-holes {
                align-self: center;
                font-size: 18px;
            }

        .golf-advantage-dot {
            position: relative;
            display: block;
            right: 0px;
            top: 0px;
            font-size: 8px;
        }

        .golfer-player .score-box {
            max-width: 50px;
        }
    </style>
    <section class="content">
        <div class="row">
            <div class="col-xs-12">
                <script type="text/x-template" id="main-box-template">
                    <div class="box box-default">
                        <div class="box-header">
                            <div>
                                <h1 class="box-title col-md-3" style="font-weight:bold; color:red; font-size:24px; padding-bottom:5px;">Create Board</h1>
                                <div class="form-group pull-right">
                                    <button class="btn btn-warning" v-on:click="HideForm()">Cancel</button>
                                    <button class="btn btn-success" v-on:click="SaveBoard()" v-bind:disabled="isSaveBtnDisabled">Save Board</button>
                                </div>
                            </div>
                            <div class="box-body p-0">
                                <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12 p-0">
                                    <div class="box box-primary">
                                        <div class="box-body">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <form novalidate>
                                                        <div class="row">
                                                            <div class="col-sm-6">
                                                                <div class="form-group">
                                                                    <label>Course Name</label>
                                                                    <input class="form-control" type="text" name="CourseName" v-model="CourseName" />
                                                                </div>
                                                            </div>
                                                            <div class="col-sm-6">
                                                                <div class="form-group">
                                                                    <label>Course T Name</label>
                                                                    <input class="form-control" type="text" name="TName" v-model="CourseTName" />
                                                                </div>
                                                            </div>
                                                            <div class="col-sm-6">
                                                                <div class="form-group">
                                                                    <label>Course Slop</label>
                                                                    <input step="any" class="form-control" type="number" name="CourseSlop" v-model="CourseSlop" />
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="row">
                                                            <div class="col-sm-12">
                                                                <div class="container" style="overflow-x:auto; width:100% !important;padding:0px;">
                                                                    <div class="score-board-outer">
                                                                        @*/////////////////////////
                                                                Hole
                                                            /////////////////////////*@
                                                                        <div class="score-board-row">
                                                                            <div class="score-board-box box-heading bg-green">Hole</div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>1</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>2</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>3</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>4</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>5</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>6</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>7</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>8</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>9</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>O</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>10</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>11</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>12</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>13</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>14</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>15</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>16</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>17</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>18</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span>In</span>
                                                                            </div>
                                                                            <div class="score-board-box bg-green"></div>
                                                                        </div>
                                                                        @*/////////////////////////
                                                                Yardage
                                                            /////////////////////////*@
                                                                        <div class="score-board-row">
                                                                            <div class="score-board-box box-heading bg-light-green">Yardage</div>
                                                                            <div class="score-board-box box-width" v-for="(yar, index) in yardages.firstHalf">
                                                                                <popper trigger="click"
                                                                                        :options="{
                                                                  placement: 'top',
                                                                  modifiers: { offset: { offset: '0,10px' } }
                                                                }" v-bind:force-show="yar.show">
                                                                                    <div class="popper">
                                                                                        <div class="popper-content">
                                                                                            <input class="popper-input" step="any" max="99999" min="0" v-on:change="HoleValueInput(1)" type="number" v-model="yar.val" />
                                                                                        </div>
                                                                                    </div>
                                                                                    <span class="box-text" slot="reference">{{yar.val}}</span>
                                                                                </popper>
                                                                            </div>
                                                                            <div class="score-board-box box-width">
                                                                                <span class="box-text">{{sumArray(yardages.firstHalf)}}</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width" v-for="(yar, index) in yardages.secondHalf">
                                                                                <popper trigger="click"
                                                                                        :options="{
                                                                  placement: 'top',
                                                                  modifiers: { offset: { offset: '0,10px' } }
                                                                }">
                                                                                    <div class="popper">
                                                                                        <div class="popper-content">
                                                                                            <input class="popper-input" step="any" max="99999" min="0" v-on:change="HoleValueInput(1)" type="number" v-model="yar.val" />
                                                                                        </div>
                                                                                    </div>
                                                                                    <span class="box-text" slot="reference">{{yar.val}}</span>
                                                                                </popper>
                                                                            </div>
                                                                            <div class="score-board-box box-width">
                                                                                <span class="box-text">{{sumArray(yardages.firstHalf) + sumArray(yardages.secondHalf)}}</span>
                                                                            </div>
                                                                            <div class="score-board-box "></div>
                                                                        </div>
                                                                        @*/////////////////////////
                                                                Handicap
                                                            /////////////////////////*@
                                                                        <div class="score-board-row">
                                                                            <div class="score-board-box box-heading bg-light-green">Handicap</div>
                                                                            <div class="score-board-box box-width bg-green" v-for="(yar, index) in handicap.firstHalf">
                                                                                <popper trigger="click"
                                                                                        :options="{
                                                                  placement: 'top',
                                                                  modifiers: { offset: { offset: '0,10px' } }
                                                                }">
                                                                                    <div class="popper">
                                                                                        <div class="popper-content">
                                                                                            <input class="popper-input" step="any" max="99999" min="0" v-on:change="HoleValueInput(2)" type="number" v-model="yar.val" />
                                                                                        </div>
                                                                                    </div>
                                                                                    <span class="box-text" slot="reference">{{yar.val}}</span>
                                                                                </popper>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span class="box-text"></span>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green" v-for="(yar, index) in handicap.secondHalf">
                                                                                <popper trigger="click"
                                                                                        :options="{
                                                                  placement: 'top',
                                                                  modifiers: { offset: { offset: '0,10px' } }
                                                                }">
                                                                                    <div class="popper">
                                                                                        <div class="popper-content">
                                                                                            <input class="popper-input" step="any" max="99999" min="0" v-on:change="HoleValueInput(2)" type="number" v-model="yar.val" />
                                                                                        </div>
                                                                                    </div>
                                                                                    <span class="box-text" slot="reference">{{yar.val}}</span>
                                                                                </popper>
                                                                            </div>
                                                                            <div class="score-board-box box-width bg-green">
                                                                                <span class="box-text"></span>
                                                                            </div>
                                                                            <div class="score-board-box bg-green"></div>
                                                                        </div>
                                                                        @*/////////////////////////
                                                                Par
                                                            /////////////////////////*@
                                                                        <div class="score-board-row">
                                                                            <div class="score-board-box box-heading bg-light-green">Par</div>
                                                                            <div class="score-board-box box-width" v-for="(yar, index) in par.firstHalf">
                                                                                <popper trigger="click"
                                                                                        :options="{
                                                                  placement: 'top',
                                                                  modifiers: { offset: { offset: '0,10px' } }
                                                                }">
                                                                                    <div class="popper">
                                                                                        <div class="popper-content">
                                                                                            <input class="popper-input" step="any" max="99999" min="0" v-on:change="HoleValueInput(3)" type="number" v-model="yar.val" />
                                                                                        </div>
                                                                                    </div>
                                                                                    <span class="box-text" slot="reference">{{yar.val}}</span>
                                                                                </popper>
                                                                            </div>
                                                                            <div class="score-board-box box-width">
                                                                                <span class="box-text">{{sumArray(par.firstHalf)}}</span>
                                                                            </div>
                                                                            <div class="score-board-box box-width" v-for="(yar, index) in par.secondHalf">
                                                                                <popper trigger="click"
                                                                                        :options="{
                                                                  placement: 'top',
                                                                  modifiers: { offset: { offset: '0,10px' } }
                                                                }">
                                                                                    <div class="popper">
                                                                                        <div class="popper-content">
                                                                                            <input class="popper-input" step="any" max="99999" min="0" v-on:change="HoleValueInput(3)" type="number" v-model="yar.val" />
                                                                                        </div>
                                                                                    </div>
                                                                                    <span class="box-text" slot="reference">{{yar.val}}</span>
                                                                                </popper>
                                                                            </div>
                                                                            <div class="score-board-box box-width">
                                                                                <span class="box-text">{{sumArray(par.firstHalf) + sumArray(par.secondHalf)}}</span>
                                                                            </div>
                                                                            <div class="score-board-box text-blue"></div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </script>
                <script type="text/x-template" id="boards-listing-template">
                    <div class="box box-default">
                        <div class="box-header">
                            <div>
                                <h1 class="box-title col-md-3" style="font-weight:bold; color:red; font-size:24px; padding-bottom:5px;">Boards List</h1>
                                <div class="form-group pull-right">
                                    <button class="btn btn-success" v-on:click="showForm()">Add New Board</button>
                                </div>
                            </div>
                            <div class="box-body p-0">
                                <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12 p-0">
                                    <div class="box box-primary">
                                        <div class="box-body">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <table class="table table-responsive table-bordered table-hover">
                                                        <thead>
                                                            <tr>
                                                                <th>#</th>
                                                                <th>Course Name</th>
                                                                <th>T Name</th>
                                                                <th>Course Slop</th>
                                                                <th>Actions</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr v-for="(board, index) in boardsList">
                                                                <td>{{index + 1}}</td>
                                                                <td>{{board.CourseName}}</td>
                                                                <td>{{board.CourseTName}}</td>
                                                                <td>{{board.CourseSlop}}</td>
                                                                <td>
                                                                    <a href="javascript:void(0)" class="btn btn-link btn-xs" v-on:click="Edit(board)">Edit</a>
                                                                    <a v-bind:href="`/Admin/CreateMatch?BoardId=${board.BoardId}`" class="btn btn-info btn-xs">Create Match</a>
                                                                </td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </script>
                <div id="vueapp">
                    <main-box v-if="showForm"></main-box>
                    <boards-listing></boards-listing>
                </div>
                <script>
                Vue.component('main-box', {
                    template: '#main-box-template',
                    components: {
                        'popper': VuePopper
                    },
                    data: function () {
                        return {
                            isSaveBtnDisabled: false,
                            CourseName: null,
                            CourseTName: null,
                            CourseSlop: 0,
                            yardages: {
                                ID: 0,
                                'firstHalf': [
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false }
                                ],
                                'secondHalf': [
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false }
                                ],
                                firstHalfSum: 0,
                                secondHalfSum: 0,
                                isChanged: false
                            },
                            firstHalfSum: 0,
                            secondHalfSum: 0,
                            handicap: {
                                ID: 0,
                                'firstHalf': [
                                    { val: 0, show: false, index: 0 },
                                    { val: 0, show: false, index: 1 },
                                    { val: 0, show: false, index: 2 },
                                    { val: 0, show: false, index: 3 },
                                    { val: 0, show: false, index: 4 },
                                    { val: 0, show: false, index: 5 },
                                    { val: 0, show: false, index: 6 },
                                    { val: 0, show: false, index: 7 },
                                    { val: 0, show: false, index: 8 }
                                ],
                                'secondHalf': [
                                    { val: 0, show: false, index: 0 },
                                    { val: 0, show: false, index: 1 },
                                    { val: 0, show: false, index: 2 },
                                    { val: 0, show: false, index: 3 },
                                    { val: 0, show: false, index: 4 },
                                    { val: 0, show: false, index: 5 },
                                    { val: 0, show: false, index: 6 },
                                    { val: 0, show: false, index: 7 },
                                    { val: 0, show: false, index: 8 }
                                ],
                                'firstHalfSum': 0,
                                'secondHalfSum': 0,
                                isChanged: false
                            },
                            par: {
                                ID: 0,
                                'firstHalf': [
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false }
                                ],
                                'secondHalf': [
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false }
                                ],
                                'firstHalfSum': 0,
                                'secondHalfSum': 0,
                                isChanged: false
                            },
                            BoardToEditId: null
                        };
                    },
                    watch: {
                    },
                    methods: {
                        HideForm: function () {
                            this.$root.$emit('hide-form', true);
                        },
                        sumArray: function (arr) {
                            var sum = 0;
                            if (arr != null) {
                                for (var i = 0; i < arr.length; i++) {
                                    if (arr[i].val != "" && arr[i].val != null) {
                                        sum = sum + parseInt(arr[i].val + "", 10);
                                    }
                                }
                            }
                            return sum;
                        },
                        HoleValueInput: function (type) {
                            if (type === 1) {
                                this.yardages.isChanged = true;
                            } else if (type === 2) {
                                this.handicap.isChanged = true;
                            } else if (type === 3) {
                                this.par.isChanged = true;
                            }
                        },
                        splitData: function (obj, type) {
                            if (type == 1) {
                                return [
                                    { val: obj.H1, show: false, index: 0 },
                                    { val: obj.H2, show: false, index: 1 },
                                    { val: obj.H3, show: false, index: 2 },
                                    { val: obj.H4, show: false, index: 3 },
                                    { val: obj.H5, show: false, index: 4 },
                                    { val: obj.H6, show: false, index: 5 },
                                    { val: obj.H7, show: false, index: 6 },
                                    { val: obj.H8, show: false, index: 7 },
                                    { val: obj.H9, show: false, index: 8 }
                                ];
                            } else if (type == 2) {
                                return [
                                    { val: obj.H10, show: false, index: 0 },
                                    { val: obj.H11, show: false, index: 1 },
                                    { val: obj.H12, show: false, index: 2 },
                                    { val: obj.H13, show: false, index: 3 },
                                    { val: obj.H14, show: false, index: 4 },
                                    { val: obj.H15, show: false, index: 5 },
                                    { val: obj.H16, show: false, index: 6 },
                                    { val: obj.H17, show: false, index: 7 },
                                    { val: obj.H18, show: false, index: 8 }
                                ];
                            }
                        },
                        createHoleObj: function (type, arr) {
                            var obj = {
                                Type: type,
                                H1: arr[0].val,
                                H2: arr[1].val,
                                H3: arr[2].val,
                                H4: arr[3].val,
                                H5: arr[4].val,
                                H6: arr[5].val,
                                H7: arr[6].val,
                                H8: arr[7].val,
                                H9: arr[8].val,
                                H10: arr[9].val,
                                H11: arr[10].val,
                                H12: arr[11].val,
                                H13: arr[12].val,
                                H14: arr[13].val,
                                H15: arr[14].val,
                                H16: arr[15].val,
                                H17: arr[16].val,
                                H18: arr[17].val,
                                Updated: new Date()
                            };
                            return obj;
                        },
                        CreateBoardObj: function () {
                            var obj = [];
                            for (var i = 0; i < 9; i++) {
                                this.yardages.firstHalf[i].val = parseInt(this.yardages.firstHalf[i].val + '', 10);
                                this.yardages.secondHalf[i].val = parseInt(this.yardages.secondHalf[i].val + '', 10);
                                this.handicap.firstHalf[i].val = parseInt(this.handicap.firstHalf[i].val + '', 10);
                                this.handicap.secondHalf[i].val = parseInt(this.handicap.secondHalf[i].val + '', 10);
                                this.par.firstHalf[i].val = parseInt(this.par.firstHalf[i].val + '', 10);
                                this.par.secondHalf[i].val = parseInt(this.par.secondHalf[i].val + '', 10);
                            }
                            var yardageObj = this.createHoleObj(1, [...this.yardages.firstHalf, ...this.yardages.secondHalf]);
                            yardageObj.ID = this.yardages.ID;
                            var handicapObj = this.createHoleObj(2, [...this.handicap.firstHalf, ...this.handicap.secondHalf]);
                            handicapObj.ID = this.handicap.ID;
                            var parObj = this.createHoleObj(3, [...this.par.firstHalf, ...this.par.secondHalf]);
                            parObj.ID = this.par.ID;
                            yardageObj.BoardId = handicapObj.BoardId = parObj.BoardId = this.BoardToEditId;
                            yardageObj.CourseName = handicapObj.CourseName = parObj.CourseName = this.CourseName;
                            yardageObj.CourseSlop = handicapObj.CourseSlop = parObj.CourseSlop = this.CourseSlop;
                            yardageObj.CourseTName = handicapObj.CourseTName = parObj.CourseTName = this.CourseTName;
                            obj.push(yardageObj);
                            obj.push(handicapObj);
                            obj.push(parObj);
                            return obj;
                        },
                        AddBoard: function () {
                            axios.post(`/api/WebApis/AddBoard`, this.CreateBoardObj()
                            ).then(
                                res => {
                                    this.$root.$emit('board-added', true);
                                }
                            ).catch(
                                err => {
                                }
                            );
                        },
                        UpdateBoard: function () {
                            axios.patch(`/api/WebApis/UpdateBoard`, this.CreateBoardObj()).then(
                                res => {
                                    this.$root.$emit('board-updated', true);
                                }
                            ).catch(
                                err => {
                                }
                            );
                        },
                        SaveBoard: function () {
                            if (this.BoardToEditId !== '' && this.BoardToEditId != null) {
                                this.UpdateBoard();
                            } else {
                                this.AddBoard();
                            }
                        },
                        LoadBoard: function (boardId) {
                            axios.get(`/api/WebApis/GetBoard?boardId=${boardId}`).then(
                                res => {
                                    if (res.data.length > 0) {
                                        this.CourseName = res.data[0].CourseName;
                                        this.CourseSlop = res.data[0].CourseSlop;
                                        this.CourseTName = res.data[0].CourseTName;
                                        for (var i = 0; i < res.data.length; i++) {
                                            if (res.data[i].Type === 1) {
                                                this.yardages.ID = res.data[i].ID;
                                                this.yardages.firstHalf = this.splitData(res.data[i], 1);
                                                this.yardages.secondHalf = this.splitData(res.data[i], 2);
                                            }
                                            if (res.data[i].Type === 2) {
                                                this.handicap.ID = res.data[i].ID;
                                                this.handicap.firstHalf = this.splitData(res.data[i], 1);
                                                this.handicap.secondHalf = this.splitData(res.data[i], 2);
                                            }
                                            if (res.data[i].Type === 3) {
                                                this.par.ID = res.data[i].ID;
                                                this.par.firstHalf = this.splitData(res.data[i], 1);
                                                this.par.secondHalf = this.splitData(res.data[i], 2);
                                            }
                                        }
                                    }
                                }
                            )
                        }
                    },
                    computed: {
                    },
                    mounted: function () {
                        this.$root.$on('edit-board-data', data => {
                            this.BoardToEditId = data;
                            this.LoadBoard(this.BoardToEditId);
                        });
                        this.$root.$on('show-form', data => {
                            const defaultObj = {
                                'firstHalf': [
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false }
                                ],
                                'secondHalf': [
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false },
                                    { val: 0, show: false }
                                ],
                                firstHalfSum: 0,
                                secondHalfSum: 0,
                                isChanged: false
                            };
                            this.BoardToEditId = null;
                            this.yardages = Object.assign({}, defaultObj);
                            this.handicap = Object.assign({}, defaultObj);
                            this.par = Object.assign({}, defaultObj);
                            this.CourseName = this.CourseTName = null;
                            this.CourseSlop = 0;
                        })
                    }
                });

                    Vue.component('boards-listing', {
                        template: '#boards-listing-template',
                        component: {
                            'popper': VuePopper
                        },
                        data: function () {
                            return {
                                boardsList: [],
                            };
                        },
                        watch: {

                        },
                        methods: {
                            showForm: function () {
                                this.$root.$emit('show-form', true);
                            },
                            LoadBoards: function () {
                                axios.get('/api/WebApis/GetBoards?limit=0&page=0').then(
                                    boards => {
                                        this.boardsList = boards.data;
                                    }
                                ).catch(
                                    err => {
                                    }
                                );
                            },
                            Edit: function (board) {
                                this.$root.$emit('edit-board', board.BoardId);
                            }
                        },
                        computed: {

                        },
                        mounted: function () {
                            this.LoadBoards();
                            this.$root.$on('board-added', res => {
                                this.LoadBoards();
                            });
                            this.$root.$on('board-updated', res => {
                                this.LoadBoards();
                            });
                        }
                    });

                var app = new Vue({
                    el: '#vueapp',
                    data: {
                        message: 'Hello Vue!',
                        showForm: false,
                    },
                    components: {
                        'popper': VuePopper
                    },
                    mounted: function () {
                        this.$on('show-form', data => {
                            this.showForm = true;
                        });
                        this.$on('hide-form', data => {
                            this.showForm = false;
                        });
                        this.$root.$on('edit-board', data => {
                            this.showForm = true;
                            setTimeout(() => {
                                this.$root.$emit('edit-board-data', data);
                            }, 100);
                        });

                        this.$root.$on('board-added', res => {
                            this.showForm = false;
                        });
                        this.$root.$on('board-updated', res => {
                            this.showForm = false;
                        });
                    }
                });
                </script>

            </div>
        </div>
    </section>
